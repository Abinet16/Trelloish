name: Backend CI/CD Pipeline

# Controls when the action will run.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # This job builds the application and runs tests
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Setup Bun environment
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest # Use the latest version of Bun

      # 3. Cache dependencies to speed up future runs
      - name: Cache Bun dependencies
        uses: actions/cache@v3
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      # 4. Install dependencies
      - name: Install dependencies
        run: bun install --frozen-lockfile

      # 5. Run Linter to check for code style issues
      - name: Lint code
        run: bun run lint # Assumes a "lint" script in your package.json

      # 6. Run Unit Tests (do not require a database connection)
      - name: Run Unit Tests
        run: bun test --target unit

      # 7. Run Database Migrations for E2E Tests
      # This step connects to your Neon test database and applies the schema.
      - name: Run DB Migrations on Test Database
        env:
          DATABASE_URL: ${{ secrets.NEON_TEST_DATABASE_URL }}
        run: bun run db:migrate
        
      # 8. Run End-to-End Tests (require a live database connection)
      - name: Run End-to-End Tests
        env:
          # Provide all necessary environment variables for the application to run
          DATABASE_URL: ${{ secrets.NEON_TEST_DATABASE_URL }}
          JWT_ACCESS_SECRET: ${{ secrets.JWT_TEST_SECRET }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_TEST_SECRET }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          PORT: 8080 # Use a non-privileged port for CI
          NODE_ENV: test
        run: bun test --target e2e

      